{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Go to Table\");\n\nconst _hoisted_2 = {\n  class: \"text-red-700 text-3xl font-bold\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"languages\"\n}, \"Languages\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select Languages\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"kh\"\n}, \"Khmer\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"en\"\n}, \"English\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_4, _hoisted_5, _hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.$t(\"message.helo\")), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"select\", {\n    name: \"languages\",\n    id: \"languages\",\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.onChangeLanguages($event)),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.key = $event)\n  }, _hoisted_7, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelSelect, _ctx.key]])])]), _createVNode(_component_router_view)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDAEwB;;;EAChBA,KAAK,EAAC;;;gCAGRC,oBAAwC,OAAxC,EAAwC;EAAjCC,GAAG,EAAC;AAA6B,CAAxC,EAAuB,WAAvB,EAAgC;AAAA;AAAhC;;gCAOED,oBAA0C,QAA1C,EAA0C;EAAlCE,KAAK,EAAC;AAA4B,CAA1C,EAAiB,kBAAjB,EAAiC;AAAA;AAAjC;;gCACAF,oBAAiC,QAAjC,EAAiC;EAAzBE,KAAK,EAAC;AAAmB,CAAjC,EAAmB,OAAnB,EAAwB;AAAA;AAAxB;;gCACAF,oBAAmC,QAAnC,EAAmC;EAA3BE,KAAK,EAAC;AAAqB,CAAnC,EAAmB,SAAnB,EAA0B;AAAA;AAA1B;;oBAFAC,YACAC,YACAC;;;;;;6DAdNL,oBAiBM,KAjBN,EAiBM,IAjBN,EAiBM,CAhBJM,aAA6CC,sBAA7C,EAA6C;IAAhCC,EAAE,EAAC;EAA6B,CAA7C,EAAmB;sBAAC,MAAW,aAAZ;;;;EAAA,CAAnB,CAgBI,EAfJR,oBAAyE,IAAzE,cAAyES,iBAA1BC,QAAE,cAAF,CAA0B,CAAzE,EAAiD;EAAA;EAAjD,CAeI,EAbJV,oBAYM,KAZN,EAYM,IAZN,EAYM,CAXJW,UAWI,kBAVJX,oBASS,QATT,EASS;IARPY,IAAI,EAAC,WAQE;IAPPC,EAAE,EAAC,WAOI;IANNC,QAAM,sCAAEJ,uBAAkBK,MAAlB,CAAF,CAMA;+DALEL,WAAGK;EAKL,CATT;;EAAA,oBAIWL,WAMP,CAZN,CAaI,CAjBN,GAkBAJ,aAAeU,sBAAf","names":["class","_createElementVNode","for","value","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","_component_router_link","to","_toDisplayString","_ctx","_hoisted_3","name","id","onChange","$event","_component_router_view"],"sourceRoot":"","sources":["/Users/macbook/Documents/PhengSouphal/Vue/vue-template/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <router-link to=\"/\">Go to Table</router-link>\n    <h2 class=\"text-red-700 text-3xl font-bold\">{{ $t(\"message.helo\") }}</h2>\n\n    <div>\n      <label for=\"languages\">Languages</label>\n      <select\n        name=\"languages\"\n        id=\"languages\"\n        @change=\"onChangeLanguages($event)\"\n        v-model=\"key\"\n      >\n        <option value=\"\">Select Languages</option>\n        <option value=\"kh\">Khmer</option>\n        <option value=\"en\">English</option>\n      </select>\n    </div>\n  </div>\n  <router-view />\n</template>\n\n<script>\n// export default {\n//   name: \"App\",\n//   data() {\n//     return {\n//       key: \"\",\n//     };\n//   },\n//   components: {},\n//   methods: {\n//     onChangeLanguages(event) {\n//       const lang = event.target.value;\n//       this.$i18n.locale = lang;\n//       localStorage.setItem(\"language\", lang);\n//     },\n//   },\n// };\n</script>\n\n<style src=\"./assets/tailwind.css\"></style>\n"]},"metadata":{},"sourceType":"module"}