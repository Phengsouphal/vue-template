{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>\\n    <h2 class=\\\"text-red-700 text-3xl font-bold\\\">{{ $t(\\\"message.helo\\\") }}</h2>\\n\\n    <div>\\n      <label for=\\\"languages\\\">Languages</label>\\n      <select\\n        name=\\\"languages\\\"\\n        id=\\\"languages\\\"\\n        @change=\\\"onChangeLanguages($event)\\\"\\n        v-model=\\\"key\\\"\\n      >\\n        <option value=\\\"\\\">Select Languages</option>\\n        <option value=\\\"kh\\\">Khmer</option>\\n        <option value=\\\"en\\\">English</option>\\n      </select>\\n    </div>\\n  </div> \"), _createVNode(_component_router_view)], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;6DACEA,igBAiBAC,aAAeC,sBAAf","names":["_createCommentVNode","_createVNode","_component_router_view"],"sourceRoot":"","sources":["/Users/macbook/Documents/PhengSouphal/Vue/vue-template/src/App.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    <h2 class=\"text-red-700 text-3xl font-bold\">{{ $t(\"message.helo\") }}</h2>\n\n    <div>\n      <label for=\"languages\">Languages</label>\n      <select\n        name=\"languages\"\n        id=\"languages\"\n        @change=\"onChangeLanguages($event)\"\n        v-model=\"key\"\n      >\n        <option value=\"\">Select Languages</option>\n        <option value=\"kh\">Khmer</option>\n        <option value=\"en\">English</option>\n      </select>\n    </div>\n  </div> -->\n  <router-view />\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      key: \"\",\n    };\n  },\n  components: {},\n  methods: {\n    onChangeLanguages(event) {\n      const lang = event.target.value;\n      this.$i18n.locale = lang;\n      localStorage.setItem(\"language\", lang);\n    },\n  },\n};\n</script>\n\n<style src=\"./assets/tailwind.css\"></style>\n"]},"metadata":{},"sourceType":"module"}